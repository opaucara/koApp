var Padre = function(name){
  console.log('Constructor Padre');
  this.lastName = name;
};
Padre.prototype.getName = function(){
  console.log("GetName padre");
  return this.lastName;
};
var Hijo = function(name){
  console.log('Constructor Hijo');
  Padre.call(this, name);
  //Object.create(Padre.prototype);  
};
Hijo.prototype = Object.create(Padre.prototype);
//Overrides parent's getName method adding some custom behaviour
Hijo.prototype.getName = function(){
  var parentName = Padre.prototype.getName.call(this);
  return ' - ' + parentName;
};
//Hijo.prototype = new Padre();
//can't pass parameter "name", 
//and mainly (new, .call(this, parent)) generates 2 instantiations
var res = new Hijo('Kaiser');
console.log(res.getName());