Index: Scripts/app/ViewModels/manageEvents.js
===================================================================
--- Scripts/app/ViewModels/manageEvents.js	(revision 11492)
+++ Scripts/app/ViewModels/manageEvents.js	(working copy)
@@ -17,7 +17,7 @@
           this.eventList(utils.addEventImageToItems(this.eventList(), 'large'));
           $(".scrollBar").mCustomScrollbar();
           this.gmap = GMap.initialize({mapContainer: '#map_canvas'});
-          this.gmap.addMarkers(this.eventList());
+          this.gmap.addMarkers(this.eventList(), handleResults);
 
           var promise = this.gmap.createPlaceAutocomplete(
                           $('.autocompleteGoogle').get(0), 
@@ -32,7 +32,6 @@
     };
 
     var handleResults = _.bind(function(results) {
-      console.log(results);
       this.eventModel.country(results.country);
       this.eventModel.state(results.administrative);
       this.eventModel.city(results.locality);
@@ -50,7 +49,10 @@
       this.gmap.showCard(item);
     }, this);
 
-    this.editEvent = _.bind(function (item){
+    this.editEvent = _.bind(function (item,event){
+      event.stopPropagation();
+      this.gmap.setCurrentEvent(item);
+      //this.gmap.makeDrageable(item);
       this.showForm(true);
       this.isEditing(true);
 
@@ -60,7 +62,7 @@
       this.eventModel.selectedType(item.Type);
       this.eventModel.startDateSelected(item.DateFrom);
       this.eventModel.endDateSelected(item.DateTo);
-      this.eventModel.latitude(item.Location.Latitute);
+      this.eventModel.latitude(item.Location.Latitude);
       this.eventModel.longitude(item.Location.Longitude);
       this.eventModel.country(item.Location.Country);
       this.eventModel.state(item.Location.State);
@@ -72,9 +74,16 @@
     this.addEvent = function(){
       this.showForm(true);
       this.clearEventObject();
+      this.gmap.setCurrentEvent(null);
     };
 
-    this.cancelForm = _.bind(function(){
+    this.cancelForm = _.bind(function(item){
+      if (this.isEditing()){
+        this.gmap.undoMarker(_.findWhere(this.eventList(), {Id:item.id()}));
+      }else {
+        this.gmap.undoMarker(null);
+      }
+      //this.gmap.setCurrentEvent(null);
       this.showForm(false);
       this.isEditing(false);
       this.clearEventObject();
Index: Scripts/lib/custom/GMap.js
===================================================================
--- Scripts/lib/custom/GMap.js	(revision 11492)
+++ Scripts/lib/custom/GMap.js	(working copy)
@@ -9,6 +9,8 @@
     var infoWindow;
     var gLocationMapper = {};
     var markerForAutocomplete = null;
+    var currentEvent = null;
+    var currentMarker = null;
     var placeOptions = {
       types: ['geocode']
     };
@@ -20,6 +22,7 @@
                     mapTypeId: google.maps.MapTypeId.ROADMAP,
                     styles: [{featureType: "poi.business", stylers: [{ visibility: "off" }]}],
                     bounceTime: 800,
+                    minZoom:2,
                     zoomControlOptions:{
                       position: google.maps.ControlPosition.TOP_RIGHT
                     },
@@ -38,7 +41,7 @@
       return this;
     };
 
-    var addMarkers = function(markerList){
+    var addMarkers = function(markerList, handleResults){
       var position = null;
       var marker = null;
       _.each(markerList, function(item){
@@ -58,6 +61,8 @@
             map.setCenter(marker1.getPosition());
           }
         }(marker)));
+
+        bindReverseDragMarker(marker, handleResults); 
       });
     };
 
@@ -147,14 +152,10 @@
     var createPlaceAutocomplete = function(htmlInput, settings, handleResults){
       var autocomplete = new google.maps.places.Autocomplete(htmlInput, placeOptions);
       infowindowForAutocomplete = new google.maps.InfoWindow();
-      markerForAutocomplete = new google.maps.Marker({
-        map: map,
-        draggable: true
-      });
       google.maps.event.addListener(autocomplete, 'place_changed', function() {
+        var markerAutocomplete = getMarker();
         infowindowForAutocomplete.close();
-        console.log("Place Changed");
-        markerForAutocomplete.setVisible(false);
+        markerAutocomplete.setVisible(false);
         var place = autocomplete.getPlace();
         if (!place.geometry) {
           return;
@@ -166,24 +167,18 @@
           map.setCenter(place.geometry.location);
           map.setZoom(17);  // Why 17? Because it looks good.
         }
-        markerForAutocomplete.setIcon(/** @type {google.maps.Icon} */({
-          url: place.icon,
-          size: new google.maps.Size(71, 71),
-          origin: new google.maps.Point(0, 0),
-          anchor: new google.maps.Point(17, 34),
-          scaledSize: new google.maps.Size(35, 35)
-        }));
-        markerForAutocomplete.setPosition(place.geometry.location);
-        markerForAutocomplete.setVisible(true);
+        
+        markerAutocomplete.setPosition(place.geometry.location);
+        markerAutocomplete.setVisible(true);
 
         var locationInfo = buildLocationInfo(place);
         handleResults(locationInfo);
 
         infowindowForAutocomplete.setContent('<div><strong>' + (locationInfo.locality?locationInfo.locality + ', ':'') + '</strong><br>' + (locationInfo.administrative?locationInfo.administrative + ', ':  '') + locationInfo.country);
-        infowindowForAutocomplete.open(map, markerForAutocomplete);
+        infowindowForAutocomplete.open(map, markerAutocomplete);
       });
       if (settings.reverseLocation) {
-        return bindReverseDragMarker(markerForAutocomplete, handleResults); 
+        //return bindReverseDragMarker(markerForAutocomplete, handleResults); 
       }
       //TODO this 
       return $.Deferred().promise();
@@ -201,7 +196,7 @@
             var locationInfo = buildLocationInfo(results[0]);
             handleResults(locationInfo);
             infowindowForAutocomplete.setContent('<div><strong>' + (locationInfo.locality?locationInfo.locality + ', ':'') + '</strong><br>' + locationInfo.administrative + locationInfo.country);
-            infowindowForAutocomplete.open(map, markerForAutocomplete);
+            infowindowForAutocomplete.open(map, requestMarker);
             requestMarker.setMap(map);
           }else {
             def.resolve(null);
@@ -231,6 +226,41 @@
       return politicalComponentes;
     };
 
+    var makeDrageable = function(item){
+      gLocationMapper[item.Id].marker.setOptions({draggable: true});
+    };
+
+    var undoMarker = function(item){
+      if (item) {
+        gLocationMapper[item.Id].marker.setOptions({draggable:false});     
+        gLocationMapper[item.Id].marker.setPosition(new google.maps.LatLng(item.Location.Latitude, item.Location.Longitude));
+        gLocationMapper[item.Id].infoWindow.close();
+      }else{
+        currentMarker && currentMarker.setVisible(false);
+        currentMarker.setMap(null);
+      }
+    };
+
+    var setCurrentEvent = function (item) {
+      if (item) {
+        gLocationMapper[item.Id].marker.setOptions({draggable: true});
+      }
+      currentEvent = item;
+    };
+
+    var getMarker = function () {
+      var marker;
+      if (currentEvent) {
+        currentMarker = gLocationMapper[currentEvent.Id].marker;
+      }else {
+        currentMarker = new google.maps.Marker({
+          map: map,
+          draggable: true
+        });
+      }
+      return currentMarker;
+    };
+
      return {
       initialize: initialize,
       addMarkers: addMarkers,
@@ -239,7 +269,10 @@
       filterLocationFromCityRadius: filterLocationFromCityRadius,
       clearMarkers: clearMarkers,
       centerOnUserLocation: centerOnUserLocation,
-      createPlaceAutocomplete: createPlaceAutocomplete
+      createPlaceAutocomplete: createPlaceAutocomplete,
+      makeDrageable: makeDrageable,
+      undoMarker: undoMarker,
+      setCurrentEvent: setCurrentEvent
      };
    })();
    return GMap;
